
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3
import time
import random
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

# –û–±—â–∏–π –ª–∏–º–∏—Ç –º–æ–Ω–µ—Ç
TOTAL_COINS_LIMIT = 10_000_000_000
total_coins_mined = 0  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def db_connection():
    return sqlite3.connect('iziswap.db')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_or_create_user(user_id, username, ref_code=None):
    conn = db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT ref_code FROM users WHERE user_id = ?", (user_id,))
    user = cursor.fetchone()

    if user is None:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
        ref_code = ref_code or f"ref{user_id}"
        cursor.execute(
            "INSERT INTO users (user_id, username, ref_code) VALUES (?, ?, ?)",
            (user_id, username, ref_code)
        )
        conn.commit()
    else:
        ref_code = user[0]

    conn.close()
    return ref_code

# –í–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏
def restore_energy(user_id):
    conn = db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT energy, energy_restore_rate, last_energy_restore_time FROM users WHERE user_id = ?", (user_id,))
    energy, restore_rate, last_restore_time = cursor.fetchone()
    current_time = int(time.time())

    if energy >= 2400:
        return energy  # –≠–Ω–µ—Ä–≥–∏—è –Ω–∞ –º–∞–∫—Å–∏–º—É–º–µ

    time_elapsed = current_time - last_restore_time
    energy_to_restore = (time_elapsed // 3600) * restore_rate
    new_energy = min(2400, energy + energy_to_restore)

    if energy_to_restore > 0:
        cursor.execute(
            "UPDATE users SET energy = ?, last_energy_restore_time = ? WHERE user_id = ?",
            (new_energy, current_time, user_id)
        )
        conn.commit()

    conn.close()
    return new_energy

# –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
def daily_bonus(user_id):
    conn = db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT last_bonus_time FROM users WHERE user_id = ?", (user_id,))
    last_bonus_time = cursor.fetchone()[0]
    current_time = int(time.time())

    if current_time - last_bonus_time >= 86400:  # 24 —á–∞—Å–∞
        cursor.execute("UPDATE users SET balance = balance + 50, last_bonus_time = ? WHERE user_id = ?", (current_time, user_id))
        conn.commit()
        conn.close()
        return True
    conn.close()
    return False

# –ü–æ–∫—É–ø–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏
def buy_energy(user_id, ton_spent):
    conn = db_connection()
    cursor = conn.cursor()
    boost_energy = ton_spent * 100  # 100 —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞ 1 TON
    cursor.execute("SELECT energy_boost FROM users WHERE user_id = ?", (user_id,))
    current_boost = cursor.fetchone()[0]

    if current_boost + boost_energy > 50000:
        conn.close()
        return False  # –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–∫—É–ø–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏

    cursor.execute("UPDATE users SET energy_boost = energy_boost + ? WHERE user_id = ?", (boost_energy, user_id))
    conn.commit()
    conn.close()
    return True

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_game(message):
    user_id = message.chat.id
    username = message.from_user.username or "–ê–Ω–æ–Ω–∏–º"
    ref_code = None

    if len(message.text.split()) > 1:
        ref_code = message.text.split()[1]

    user_ref_code = get_or_create_user(user_id, username, ref_code)

    # –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
    if ref_code and ref_code != user_ref_code:
        conn = db_connection()
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET balance = balance + 10 WHERE ref_code = ?", (ref_code,))
        conn.commit()
        conn.close()
        bot.send_message(user_id, "üí∏ –ë–æ–Ω—É—Å 10 –º–æ–Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω –≤–∞—à–µ–º—É —Ä–µ—Ñ–µ—Ä–µ—Ä—É!")

    bot.send_message(user_id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ IZI SWAP, {username}! –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {user_ref_code}")
    send_game_buttons(user_id)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–≥—Ä—ã
def send_game_buttons(chat_id):
    markup = InlineKeyboardMarkup()
    button_mine = InlineKeyboardButton("‚õè –ö–ª–∏–∫ –¥–ª—è –º–æ–Ω–µ—Ç", callback_data="mine")
    button_bonus = InlineKeyboardButton("üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å", callback_data="bonus")
    button_energy = InlineKeyboardButton("‚ö° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é", callback_data="energy")
    markup.add(button_mine, button_bonus, button_energy)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_buttons(call):
    user_id = call.message.chat.id

    if call.data == "mine":
        energy = restore_energy(user_id)
        if energy > 0:
            conn = db_connection()
            cursor = conn.cursor()
            cursor.execute("UPDATE users SET energy = energy - 1, balance = balance + 0.1 WHERE user_id = ?", (user_id,))
            conn.commit()
            conn.close()
            bot.answer_callback_query(call.id, "–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 0.1 –º–æ–Ω–µ—Ç!")
        else:
            bot.answer_callback_query(call.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏!")

    elif call.data == "bonus":
        if daily_bonus(user_id):
            bot.answer_callback_query(call.id, "üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≤ 50 –º–æ–Ω–µ—Ç!")
        else:
            bot.answer_callback_query(call.id, "‚è≥ –ë–æ–Ω—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.")

    elif call.data == "energy":
        energy = restore_energy(user_id)
        bot.answer_callback_query(call.id, f"–£ –≤–∞—Å {energy} —ç–Ω–µ—Ä–≥–∏–∏.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling()
